services:
  app:
    hostname: app1
    image: node:18-alpine
    command: sh -c "yarn install && yarn run dev"
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 8081:3000
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DATABASE}
    networks:
      - web
      - lan
    restart: unless-stopped  # Redémarrer toujours le conteneur en cas d'échec
    deploy:
      resources:
        limits:
          cpus: '0.5'  # Limite de CPU à 0.5 unité
          memory: '512M'  # Limite de mémoire à 512 Mo
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app1.rule=PathPrefix(`/app1`)"
  mysql:
    image: mysql:8.0
    healthcheck:
      # mysql >_  mysqladmin ping -h localhost
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
    volumes:
      - todo-mysql-data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - lan
    restart: unless-stopped  # Redémarrer toujours le conteneur en cas d'échec
    deploy:
      resources:
        limits:
          cpus: '0.5'  # Limite de CPU à 0.5 unité
          memory: '512M'  # Limite de mémoire à 512 Mo
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

volumes:
  todo-mysql-data:

networks:
  # internal by compose
  lan: 
  # external => must be created outside compose
  web:
    external: true
